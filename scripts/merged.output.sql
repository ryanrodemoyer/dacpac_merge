/*
Deployment script for DacpacMerge

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DacpacMerge"
:setvar DefaultFilePrefix "DacpacMerge"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

print 'Database1 PreDeploy'
GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

print 'Database2 PreDeploy'
GO

GO
PRINT N'Creating [dbo].[Podcasts]...';


GO
CREATE TABLE [dbo].[Podcasts] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [PodcastName] NVARCHAR (50) NULL,
    [ReleaseDate] DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Podcasts].[IX_Podcasts_PodcastName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Podcasts_PodcastName]
    ON [dbo].[Podcasts]([PodcastName] ASC);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]             INT           NOT NULL,
    [Name]           VARCHAR (100) NULL,
    [DateJoined]     DATETIME      NOT NULL,
    [AccountExpires] DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[VideoGames]...';


GO
CREATE TABLE [dbo].[VideoGames] (
    [Id]            INT           NOT NULL,
    [VideoGameName] NVARCHAR (50) NULL,
    [ReleaseYear]   INT           NULL,
    [GameSystem]    VARCHAR (20)  NOT NULL,
    [IsFPS]         BIT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[YoutubeChannels]...';


GO
CREATE TABLE [dbo].[YoutubeChannels] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [ChannelName] NVARCHAR (50) NULL,
    [Subscribers] INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[YoutubeChannels].[IX_YoutubeChannels_ChannelName]...';


GO
CREATE NONCLUSTERED INDEX [IX_YoutubeChannels_ChannelName]
    ON [dbo].[YoutubeChannels]([ChannelName] ASC);


GO
PRINT N'Creating [dbo].[ChannelsUpsert]...';


GO
CREATE PROCEDURE [dbo].[ChannelsUpsert]
	@channelName nvarchar(50)
	, @subscribers int
AS
insert dbo.YoutubeChannels (ChannelName,Subscribers)
values (@channelName,@subscribers)
GO
PRINT N'Creating [dbo].[PodcastsUpsert]...';


GO
CREATE PROCEDURE [dbo].[PodcastsUpsert]
	@podcastName nvarchar(50)
	, @releaseDate datetime2
AS
insert dbo.Podcasts (PodcastName,ReleaseDate)
values (@podcastName,@releaseDate)
GO
PRINT N'Creating [dbo].[VideoGamesInsert]...';


GO
CREATE PROCEDURE [dbo].[VideoGamesInsert]
	@videoGameName nvarchar(50)
	, @releaseYear int
	, @gameSystem varchar(20)
	, @isFps bit
AS
insert dbo.VideoGames (VideoGameName,ReleaseYear,GameSystem,IsFPS)
values (@videoGameName,@releaseYear,@gameSystem,@isFps)
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

print 'Database1 PostDeploy'
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

print 'Database2 PostDeploy'
GO

GO
PRINT N'Update complete.';


GO
